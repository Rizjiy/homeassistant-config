- id: turn_on_light_plants
  alias: turn_on_light_plants
  action:
  - service: script.light_plants_on
  condition: []
  trigger:
  - platform: template
    value_template: '{{ states.sensor.time.state == states.input_datetime.turn_on_light_plants.state[0:5]
      }}'
- id: turn_off_light_plants
  alias: turn_off_light_plants
  action:
  - service: script.light_plants_off
  condition: []
  trigger:
  - platform: template
    value_template: '{{ states.sensor.time.state == states.input_datetime.turn_off_light_plants.state[0:5]
      }}'
- id: turn_on_autowatering
  alias: turn_on_autowatering
  action:
  - service: switch.turn_on
    data:
      entity_id: switch.autowatering
  trigger:
    platform: time_pattern
    hours: /1
  condition:
  - condition: template
    value_template: '{{ (as_timestamp(now()) - as_timestamp(states.input_datetime.last_autowatering.state))
      /3600 > (states.input_number.autowatering_interval.state | int)}}'
- id: turn_on_autowatering_trigger
  alias: turn_on_autowatering_trigger
  trigger:
    platform: mqtt
    topic: home/kitchen/switch2/waterpump
  action:
  - service: input_datetime.set_datetime
    data_template:
      entity_id: input_datetime.last_autowatering
      time: '{{ (as_timestamp(now()) | timestamp_custom("%H:%M:%S", true)) }}'
      date: '{{ (as_timestamp(now()) | timestamp_custom("%Y-%m-%d", true)) }}'
- id: turn_on_warm_flow_morning
  alias: turn_on_warm_flow_morning
  action:
  - service: switch.turn_on
    data:
      entity_id: switch.hall_warmfloor
  trigger:
  - platform: template
    value_template: '{{ states.sensor.time.state == states.input_datetime.turn_on_warm_flow_morning.state[0:5]
      }}'
  condition:
  - condition: state
    entity_id: group.all_person
    state: home
- id: turn_off_warm_flow_day
  alias: turn_off_warm_flow_day
  trigger:
  - entity_id: person.alesha
    event: leave
    platform: zone
    zone: zone.reutov
  - entity_id: person.polina
    event: leave
    platform: zone
    zone: zone.reutov
  condition:
  - after: '9:00'
    before: '22:00'
    condition: time
  action:
  - entity_id: switch.hall_warmfloor
    service: switch.turn_off
- id: turn_on_warm_flow_evening
  alias: turn_on_warm_flow_evening
  trigger:
  - entity_id: person.lesha
    event: enter
    platform: zone
    zone: zone.reutov
  - entity_id: person.polina
    event: enter
    platform: zone
    zone: zone.reutov
  condition:
  - after: '9:00'
    before: '22:00'
    condition: time
  action:
  - data: {}
    entity_id: switch.hall_warmfloor
    service: switch.turn_on
- id: turn_off_warm_flow_night
  alias: turn_off_warm_flow_night
  action:
  - service: switch.turn_off
    data:
      entity_id: switch.hall_warmfloor
  trigger:
  - platform: template
    value_template: '{{ states.sensor.time.state == states.input_datetime.turn_off_warm_flow_night.state[0:5]
      }}'
- id: vacuum_cleaning
  alias: vacuum_cleaning
  description: Пылесосить. Проверяет была ли уборка сегодня
  trigger:
  - hours: /1
    platform: time_pattern
  condition:
  - condition: state
    entity_id: group.all_person
    state: not_home
  - condition: template
    value_template: '{{states.vacuum.xiaomi_vacuum.attributes.clean_start.date() <
      now().date()}}'
  - after: 09:00
    before: '19:00'
    condition: time
  action:
  - entity_id: vacuum.rockrobo
    service: script.vacuum_all_zones
- id: test1
  alias: Webhook test
  description: Тестовая автоматизация
  trigger:
  - platform: webhook
    webhook_id: test
  action:
  - data_template:
      message: '{{ trigger.data.a }}

        '
      name: testlog
    service: logbook.log
- id: mqtt_started
  alias: mqtt_start
  trigger:
  - platform: mqtt
    topic: Start
  action:
  - data_template:
      message: '{{ trigger.payload }}

        '
      name: started
    service: logbook.log
- id: '1581284354574'
  alias: Test
  description: Test
  trigger:
  - hours: /1
    platform: time_pattern
  condition:
  - condition: state
    entity_id: group.all_person
    state: not_home
  action:
  - delay: '1'
